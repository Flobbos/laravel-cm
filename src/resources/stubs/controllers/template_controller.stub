<?php

namespace DummyNamespace;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Flobbos\LaravelCM\Contracts\TemplateContract;
use Illuminate\Support\Facades\Storage;
use Exception;

class DummyClass extends Controller{

    protected $templates;

    protected $layouts = [];

    public function __construct(TemplateContract $templates){
        $this->templates = $templates;
        $this->layouts = $this->templates->getLayouts();
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(){
        return view('DummyViewPath.index')->withTemplates($this->templates->get());
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('DummyViewPath.create')->withLayouts($this->layouts);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $request->validate([
            'template_name' => 'required|unique:newsletter_templates'
        ]);

        $templateData = $request->except(['_token']);
        $templateData['template_name'] = str_slug($templateData['template_name']);
        $template = $this->templates->create($templateData);

        $this->templates->compile($template->template_name, [
            'template' => $template
        ]);

        return redirect()->route('DummyViewPath.index')->withMessage(trans('laravel-cm::templates.template_created'));
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id){
        
        try{
            $template = $this->templates->find($id);
            $this->templates->compile($template->template_name, [
                'template' => $template
            ]);
            $template_path = public_path('laravel-cm-assets/' . $template->template_name . '/' . $template->template_name . '.html');
            return \File::get($template_path);
        } catch (Exception $ex) {
            return redirect()->back()->withErrors($ex->getMessage());
        }
        
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        return view('DummyViewPath.edit')
            ->withLayouts($this->layouts);
            ->withTemplate($this->templates->find($id));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id) {
        $request->validate([
            'template_name' => 'required'
        ]);

        $templateData = $request->except(['_token']);
        $template = $this->templates->update($id, $templateData, true);

        $this->templates->compile($template->template_name, [
            'template' => $template
        ]);

        return redirect()->route('DummyRoute.index')->withMessage(trans('laravel-cm::templates.template_updated'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        try{
            $this->templates->delete($id);
            return redirect()->route('DummyRoute.index')->withMessage(trans('laravel-cm::crud.record_deleted'));
        } catch (Exception $ex) {
            return redirect()->route('DummyRoute.index')->withErrors($ex->getMessage());
        }
    }

    public function sendPreview($id) {
        $template = $this->templates->find($id);
        \Mail::send([], [], function($message) use ($template) {
            $message->to(config('laravel-cm.test_email'));
            $message->subject(config('laravel-cm.test_subject'));
            $message->setBody(\File::get($template->template_file_path), 'text/html');
        });

        return redirect()->back()->withMessage(trans('laravel-cm::templates.preview_sent'));
    }
}
